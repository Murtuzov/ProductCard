{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport FormCards from \"@/components/FormCards\";\nimport CardList from \"@/components/CardList\";\nexport default {\n  components: {\n    CardList,\n    FormCards\n  },\n\n  data() {\n    return {\n      cards: [{\n        id: 1,\n        name: \"явание товара\",\n        description: \"Довольно-таки интересное описание товара в несколько строк. Довольно-таки интересное описание товара в несколько строк\",\n        image: \"kokr\",\n        price: 11000\n      }, {\n        id: 2,\n        name: \"ование товара\",\n        description: \"Довольно-таки интересное описание товара в несколько строк. Довольно-таки интересное описание товара в несколько строк\",\n        image: \"kokr\",\n        price: 10000\n      }, {\n        id: 3,\n        name: \"Наименование товара\",\n        description: \"Довольно-таки интересное описание товара в несколько строк. Довольно-таки интересное описание товара в несколько строк\",\n        image: \"kokr\",\n        price: 12000\n      }],\n      selectedSort: '',\n      searchQuery: '',\n      sortOptions: [{\n        value: 'name',\n        name: 'По названию'\n      }, {\n        value: 'maxPrice',\n        name: 'По цене max'\n      }, {\n        value: 'minPrice',\n        name: 'По цене min'\n      }]\n    };\n  },\n\n  methods: {\n    add(card) {\n      this.cards.push(card);\n    },\n\n    removeCard(card) {\n      this.cards = this.cards.filter(t => t.id !== card.id);\n    }\n\n  },\n  computed: {\n    sortedCard() {\n      if (this.selectedSort !== 'maxPrice' && this.selectedSort !== 'minPrice') {\n        return [...this.cards].sort((elem1, elem2) => elem1[this.selectedSort]?.localeCompare(elem2[this.selectedSort]));\n      } else if (this.selectedSort === 'maxPrice') {\n        return [...this.cards].sort((elem1, elem2) => elem2['price'] - elem1['price']);\n      } else if (this.selectedSort === 'minPrice') {\n        return [...this.cards].sort((elem1, elem2) => elem1['price'] - elem2['price']);\n      }\n    },\n\n    sortedAndSearchCard() {\n      return this.sortedCard.filter(card => card.name.includes(this.searchQuery));\n    }\n\n  }\n};","map":{"version":3,"mappings":";AA+BA;AACA;AACA;EACAA;IACAC,QADA;IACAC;EADA,CADA;;EAKAC;IACA;MACAC,QACA;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAJ;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,CAFA,EAGA;QAAAJ;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,CAHA,CADA;MAMAC,gBANA;MAOAC,eAPA;MAQAC,cACA;QAAAC;QAAAP;MAAA,CADA,EAEA;QAAAO;QAAAP;MAAA,CAFA,EAGA;QAAAO;QAAAP;MAAA,CAHA;IARA;EAcA,CApBA;;EAqBAQ;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA;;EANA,CArBA;EA6BAC;IACAC;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA,CAFA,MAGA;QACA;MACA;IACA,CAXA;;IAYAC;MACA;IACA;;EAdA;AA7BA","names":["components","CardList","FormCards","data","cards","id","name","description","image","price","selectedSort","searchQuery","sortOptions","value","methods","add","removeCard","computed","sortedCard","sortedAndSearchCard"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div>\n    <header id=\"header\">\n      <h1 class=\"header-title\">Добавление товара</h1>\n      <div>\n        <input type=\"search\" v-model=\"searchQuery\" class=\"header-search\">\n        <select v-model=\"selectedSort\" class=\"header-filter\">\n          <option disabled value=\"\">Выберите из списка</option>\n          <option\n              v-for=\"option in sortOptions\"\n              :key=\"option.value\"\n              :value=\"option.value\"\n          >\n              {{option.name}}\n          </option>\n        </select>\n      </div>\n    </header>\n    <div class=\"wrapper\">\n      <form-cards\n        @create=\"add\"\n      />\n        <card-list\n            :cards=\"sortedAndSearchCard\"\n            @deleteCard=\"removeCard\"\n        />\n    </div>\n  </div>\n</template>\n\n<script>\nimport FormCards from \"@/components/FormCards\";\nimport CardList from \"@/components/CardList\";\nexport default {\n  components: {\n    CardList, FormCards,\n  },\n\n  data(){\n    return{\n      cards: [\n        {id: 1, name: \"явание товара\", description: \"Довольно-таки интересное описание товара в несколько строк. Довольно-таки интересное описание товара в несколько строк\", image: \"kokr\", price: 11000},\n        {id: 2, name: \"ование товара\", description: \"Довольно-таки интересное описание товара в несколько строк. Довольно-таки интересное описание товара в несколько строк\", image: \"kokr\", price: 10000},\n        {id: 3, name: \"Наименование товара\", description: \"Довольно-таки интересное описание товара в несколько строк. Довольно-таки интересное описание товара в несколько строк\", image: \"kokr\", price: 12000}\n      ],\n      selectedSort: '',\n      searchQuery: '',\n      sortOptions:[\n        {value: 'name', name: 'По названию'},\n        {value: 'maxPrice', name: 'По цене max'},\n        {value: 'minPrice', name: 'По цене min'},\n       ]\n      }\n    },\n    methods: {\n      add(card) {\n          this.cards.push(card)\n      },\n      removeCard(card){\n        this.cards = this.cards.filter(t => t.id !== card.id)\n      }\n    },\n    computed:{\n      sortedCard(){\n        if(this.selectedSort !== 'maxPrice' && this.selectedSort !== 'minPrice') {\n         return  [...this.cards].sort((elem1, elem2) => elem1[this.selectedSort]?.localeCompare(elem2[this.selectedSort]))\n        }\n        else if(this.selectedSort === 'maxPrice'){\n          return [...this.cards].sort((elem1,elem2) => elem2['price'] - elem1['price'])\n        }\n        else if(this.selectedSort === 'minPrice'){\n          return [...this.cards].sort((elem1,elem2) => elem1['price'] - elem2['price'])\n        }\n      },\n      sortedAndSearchCard(){\n        return this.sortedCard.filter(card => card.name.includes(this.searchQuery))\n      }\n    }\n  }\n</script>\n\n<style src=\"./style.css\"></style>\n"]},"metadata":{},"sourceType":"module"}